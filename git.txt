# Git

Blob = Files 
Tree = Directories

Commit ==>
1) The hash of the tree
2) The hash of parent commits
3) Time, author
4) Message

# COMMIT
1) git add  (filename or (all) . )
2) git commit -m 'Message for the commit'
# Before every commit we 'git add' OR git commit -am

# SHOW
git show --format=raw d409ca7(Commit hash) => Τι άλλαξε στο commit
git show --oneline master => Τι άλλαξε στο master branch
git rev-parse master => Hash του master branch
git status => Που είμσατε

# BRANCHES
git branch test-branch => Create new branch
git checkout test-branch => Go to new branch

# MERGE
git merge (branche)

# LOG
git lg
-------------------------------------------------------------------
[alias]
    lg = !"git lg1"
    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"

    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
-------------------------------------------------------------------

